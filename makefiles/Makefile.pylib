###############################################################################
# Copyright (c) 2013 Potential Ventures Ltd
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Potential Ventures Ltd nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL POTENTIAL VENTURES LTD BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
###############################################################################

# All common pyhon related rules

ifeq ($(ARCH),x86_64)
LIBDIR:=lib64
else
LIBDIR:=lib
endif

PYTHON_VERSION:=2.7
PYTHON_DIR:=/usr/$(LIBDIR)/python$(PYTHON_VERSION)

# Stupid Python doesn't seem to have a consistent naming convention

PYMODULE_CASE:=$(shell if [ -f $(PYTHON_DIR)/lib-dynload/_functoolsmodule.so ]; then echo 1; else echo 0; fi)

ifeq ($(PYMODULE_CASE),1)
PYLIBS = $(PYTHON_DIR)/lib-dynload/_functoolsmodule.so \
	$(PYTHON_DIR)/lib-dynload/_socketmodule.so \
	$(PYTHON_DIR)/lib-dynload/_collectionsmodule.so \
	$(PYTHON_DIR)/lib-dynload/operator.so \
	$(PYTHON_DIR)/lib-dynload/itertoolsmodule.so \
	$(PYTHON_DIR)/lib-dynload/timemodule.so \
	$(PYTHON_DIR)/lib-dynload/cStringIO.so \
	$(PYTHON_DIR)/lib-dynload/selectmodule.so \
	$(PYTHON_DIR)/lib-dynload/fcntlmodule.so \
	$(PYTHON_DIR)/lib-dynload/_struct.so \
	$(PYTHON_DIR)/lib-dynload/binascii.so \
	$(PYTHON_DIR)/lib-dynload/math.so \
	$(PYTHON_DIR)/lib-dynload/_randommodule.so \
	$(PYTHON_DIR)/lib-dynload/zlibmodule.so \
	$(PYTHON_DIR)/lib-dynload/cPickle.so \
	$(PYTHON_DIR)/lib-dynload/arraymodule.so
else
PYLIBS = $(PYTHON_DIR)/lib-dynload/_functools.so \
	 $(PYTHON_DIR)/lib-dynload/_socket.so \
	 $(PYTHON_DIR)/lib-dynload/_collections.so \
	 $(PYTHON_DIR)/lib-dynload/operator.so \
	 $(PYTHON_DIR)/lib-dynload/itertools.so \
	 $(PYTHON_DIR)/lib-dynload/time.so \
	 $(PYTHON_DIR)/lib-dynload/cStringIO.so \
	 $(PYTHON_DIR)/lib-dynload/select.so \
	 $(PYTHON_DIR)/lib-dynload/fcntl.so \
	 $(PYTHON_DIR)/lib-dynload/_struct.so \
	 $(PYTHON_DIR)/lib-dynload/binascii.so \
	 $(PYTHON_DIR)/lib-dynload/math.so \
	 $(PYTHON_DIR)/lib-dynload/_random.so \
	 $(PYTHON_DIR)/lib-dynload/zlib.so \
	 $(PYTHON_DIR)/lib-dynload/cPickle.so \
	 $(PYTHON_DIR)/lib-dynload/array.so
endif
